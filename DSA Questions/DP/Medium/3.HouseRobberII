https://leetcode.com/problems/house-robber-ii/

class Solution {
    public int rob(int[] nums) {
        int n = nums.length;
        if(n==1) return nums[0];
        if(n==2) return Math.max(nums[0],nums[1]);
        return Math.max(fun(nums,0,n-2), fun(nums,1,n-1));
    }
    public static int fun(int[] nums, int l,int r){
        if(r-l+1 == 1) return nums[l];
        int[] dp = new int[r-l+1];
        Arrays.fill(dp,-1);
        dp[0] = nums[l];
        dp[1] = Math.max(nums[l],nums[l+1]);
        for(int i=2;i<r-l+1;i++){
            dp[i] = Math.max(dp[i-2] + nums[l+i], dp[i-1]);
        }
        return dp[r-l];
    }
}