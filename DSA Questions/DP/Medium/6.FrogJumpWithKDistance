https://takeuforward.org/plus/dsa/problems/frog-jump-with-k-distances

class Solution {
    public int frogJump(int[] heights, int k) {
        int n = heights.length;
        if(n==1) return 0;
        int[] dp = new int[n];
        dp[0] = 0;
        dp[1] = Math.abs(heights[1]-heights[0]);
        for(int i=2;i<n;i++){
            int mincost = Integer.MAX_VALUE;
            for(int j=1;j<=k;j++){
                if(i-j<0) break;
                int cost = dp[i-j] + Math.abs(heights[i] - heights[i-j]);
                mincost = Math.min(mincost,cost);
            }
            dp[i] = mincost;
        }
        return dp[n-1];
    }
}