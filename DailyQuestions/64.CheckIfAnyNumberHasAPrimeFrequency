https://leetcode.com/problems/check-if-any-element-has-prime-frequency/description/ 03-10-25

class Solution {
    public boolean isPrime(int n){
        if(n==1) return false;
        for(int i=2;i<=n/2;i++){
            if(n%i==0) return false;
        }
        return true;
    }
    public boolean checkPrimeFrequency(int[] nums) {
        HashMap<Integer,Integer> map = new HashMap<>();
        for(int i=0;i<nums.length;i++){
            map.put(nums[i],map.getOrDefault(nums[i],0)+1);
        }
        for(int val : map.values()){
            if(isPrime(val)) return true;
        }
        return false;
    }
}