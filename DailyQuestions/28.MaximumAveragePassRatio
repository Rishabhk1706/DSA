https://leetcode.com/problems/maximum-average-pass-ratio/description/ 27-08-25

class Solution {
    public double maxAverageRatio(int[][] classes, int extraStudents) {
        PriorityQueue<int[]> pq = new PriorityQueue<>((a,b) -> {
            double gainA = gain(a[0], a[1]);
            double gainB = gain(b[0], b[1]);
            if(gainB > gainA) return 1;     // b comes before a (max-heap)
            else if(gainB < gainA) return -1; // a comes before b
            else return 0; 
        });
        for(int i=0;i<classes.length;i++){
            pq.add(new int[] {classes[i][0],classes[i][1]});
        }
        while(extraStudents-->0){
            int[] curr = pq.poll();
            curr[0]++;
            curr[1]++;
            pq.add(curr);
        }
        double res = 0.0;
        while(pq.size()>0){
            int[] fq = pq.poll();
            res += (double)fq[0]/fq[1];
        }
        return res/classes.length;
    }
    public double gain(int pass,int total){
        return (double)(pass+1)/(total+1) - (double)pass/total;
    }
}