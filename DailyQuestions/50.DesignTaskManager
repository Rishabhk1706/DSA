https://leetcode.com/problems/design-task-manager/ 18-09-25

class TaskManager {
    PriorityQueue<int[]> pq;
    HashMap<Integer,int[]> map;
    public TaskManager(List<List<Integer>> tasks) {
        pq = new PriorityQueue<>((a,b) -> {
            if(b[2] != a[2]) return b[2] - a[2];
            return b[1] - a[1];
        });
        map = new HashMap<>();
        for(List<Integer> l: tasks){
            int[] task = {l.get(0),l.get(1),l.get(2)};
            map.put(task[1],task);
            pq.add(task);
        }
    }
    
    public void add(int userId, int taskId, int priority) {
        int[] task = {userId,taskId,priority};
        map.put(taskId,task);
        pq.add(task);
    }
    
    public void edit(int taskId, int newPriority) {
        int[] newTask = map.get(taskId);
        if(newTask!=null){
            int[] t = {newTask[0],newTask[1],newPriority};
            map.put(taskId,t);
            pq.add(t);
        }
    }
    
    public void rmv(int taskId) {
        map.remove(taskId);
    }
    
    public int execTop() {
        while(!pq.isEmpty()){
            int[] newTask = pq.poll();
            int[] curTask = map.get(newTask[1]);
            if(curTask!=null && newTask==curTask){
                map.remove(newTask[1]);
                return newTask[0];
            }
        }
        return -1;
    }
}