https://leetcode.com/problems/number-of-islands/description/

class Solution {
    public void bfs(char[][] grid, int sr, int sc, int n, int m){
        Queue<int[]> q = new LinkedList<>();
        q.add(new int[] {sr,sc});
        grid[sr][sc]='0';
        int[] dr = {0,1,0,-1};
        int[] dc = {1,0,-1,0};
        while(q.size()>0){
            int[] cur = q.poll();
            int x = cur[0];
            int y = cur[1];
            for(int i=0;i<4;i++){
                int nx = x+dr[i];
                int ny = y+dc[i];
                if(nx >= 0 && nx < n && ny >= 0 && ny < m && grid[nx][ny] == '1'){
                    grid[nx][ny] = '0';
                    q.add(new int[] {nx,ny});
                }
            }
        }
    }
    public int numIslands(char[][] grid) {
        int n=grid.length;
        int m=grid[0].length;
        int c=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]=='1'){
                    bfs(grid,i,j,n,m);
                    c++;
                }
            }
        }
        return c;
    }
}